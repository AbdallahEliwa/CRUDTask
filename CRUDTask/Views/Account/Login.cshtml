@using CRUDTask.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}
@*
    <h2>@ViewBag.Title.</h2>
    <div class="row">
        <div class="col-md-8">
            <section id="loginForm">
                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <h4>Use a local account to log in.</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <div class="checkbox">
                                @Html.CheckBoxFor(m => m.RememberMe)
                                @Html.LabelFor(m => m.RememberMe)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Log in" class="btn btn-default" />
                        </div>
                    </div>
                    <p>
                        @Html.ActionLink("Register as a new user", "Register")
                    </p>
                    @* Enable this once you have account confirmation enabled for password reset functionality
                        <p>
                            @Html.ActionLink("Forgot your password?", "ForgotPassword")
                        </p>
                }
            </section>
        </div>
        <div class="col-md-4">
            <section id="socialLoginForm">
                @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>
    </div>

    section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
*@

@section Style{
    main {
    margin: 5%;
    }

    hr {
    width: 50%;
    margin: 24px auto;
    }

    section {
    border: 2px solid #F4F4F4;
    border-radius: 10px;
    padding: 20px 0;
    }

}

<div class="container">
    <section id="loginForm" class="has-text-centered">

        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
        {
            @Html.AntiForgeryToken()
            <h1 class="title">log in.</h1>
            <hr />

            <div class="columns is-multiline">
                <div class="column is-12">
                    @Html.ValidationSummary(true, "", new { @class = "has-background-danger has-text-white" })
                </div>

                <div class="column is-12 field columns is-multiline is-centered is-mobile">
                    @Html.LabelFor(m => m.Email, new { @class = "label column is-7 is-marginless is-paddingless is-size-4" })
                    @Html.TextBoxFor(m => m.Email, new { @class = "input column is-7" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "column is-7 is-paddingless" })
                </div>


                <div class="column is-12 field columns is-multiline is-centered is-mobile">
                    @Html.LabelFor(m => m.Password, new { @class = "label column is-7 is-marginless is-paddingless is-size-4" })
                    @Html.PasswordFor(m => m.Password, new { @class = "input column is-7" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "column is-7 is-paddingless" })
                </div>


                <div class="column is-12 field is-centered is-mobile">
                    <div class="checkbox">
                        @Html.CheckBoxFor(m => m.RememberMe)
                        @Html.LabelFor(m => m.RememberMe, new { @class = "is-size-4" })
                    </div>
                </div>
            </div>
            <input type="submit" value="Log in" class="button is-primary" />
        }


    </section>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}